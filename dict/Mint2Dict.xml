<lcgdict>
  <class name="PhaseDifferenceCalc" />
  <class name="DalitzEventPattern" />
  <class name="DalitzEventList" />
  <class name="DiskResidentEventList" />
  <class name="MINT::NamedParameterBase" />
  <class name="TimeDependentGenerator" />
  <class name="SplineGenerator" />
  <class name="FitAmpSum" />
  <class name="DalitzEvent" />
  <class name="MINT::binflipChi2" />
  <class name="MINT::Minimiser" />
  <class name="MINT::Eff3piSymmetric" />
  <class name="MINT::IReturnRealForEvent" />
  <class name="HadronicParameters" />
  <class name="TimeBinning" />
  <class name="BinFlipParSet" />
  <class name="BinFlipChi2" />
  <class name="BinFlipChi2Simul" />
  <class name="SimulMinimisable" />
  <class name="MinuitParameterSet" />
  <class name="MINT::FitParameter" />
  <class name="GaussianConstraintChi2" />
  <!--
  <class name="AmpInitialiser" />
  <class name="AmpPair" />
  <class name="AmpRatios" />
  <class name="Amplitude" />
  <class name="AssociatedDecayTreeItem" />
  <class name="AssociatingDecayTree" />
  <class name="BWFct" />
  <class name="BW_BW" />
  <class name="BW_BW_DifferentMother" />
  <class name="BaseGenerator" />
  <class name="Bugg_BW" />
  <class name="Calculate4BodyProps" />
  <class name="Chi2Box" />
  <class name="Chi2BoxSet" />
  <class name="CoherenceFactor" />
  <class name="CoherenceFactorCalculator" />
  <class name="CoherenceFactorStoreAndEvaluate" />
  <class name="DDTree<AssociatedDecayTreeItem>" />
  <class name="DDTree<DecayTreeItem>" />
  <class name="DalitzArea" />
  <class name="DalitzBWArea" />
  <class name="DalitzBWBox" />
  <class name="DalitzBWBoxSet" />
  <class name="DalitzBox" />
  <class name="DalitzBoxSet" />
  <class name="DalitzBoxSet_Method2" />
  <class name="DalitzCoordinate" />
  <class name="DalitzEventPtrList" />
  <class name="DalitzHistoSet" />
  <class name="DalitzHistoStackSet" />
  <class name="DalitzHistogram" />
  <class name="DalitzMCIntegrator" />
  <class name="DalitzMCIntegrator::integrationWeight" />
  <class name="DalitzMCMC" />
  <class name="DalitzPdfBase" />
  <class name="DalitzPdfBaseFastInteg" />
  <class name="DalitzPdfBaseFlexiFastInteg" />
  <class name="DalitzPdfBaseMCInteg" />
  <class name="DalitzPdfNormChecker" />
  <class name="DalitzPdfSaveInteg" />
  <class name="DalitzPhaseSpaceBox" />
  <class name="DalitzSet<THStack>" />
  <class name="DalitzSumPdf" />
  <class name="DecayTreeItem" />
  <class name="DiskResidentEventList" />
  <class name="Eff4piSymmetric" />
  <class name="Eff4piSymmetric::ProdWithFitParameter" />
  <class name="FastAmplitudeIntegrator" />
  <class name="FermiPS_BW" />
  <class name="FindMaxFCN" />
  <class name="FitAmpIncoherentSum" />
  <class name="FitAmpList" />
  <class name="FitAmpListBase" />
  <class name="FitAmpPair" />
  <class name="FitAmpPairCovariance" />
  <class name="FitAmpPairFitCovariance" />
  <class name="FitAmpPairList" />
  <class name="FitAmplitude" />
  <class name="FitFraction" />
  <class name="FitFractionList" />
  <class name="FlatFct" />
  <class name="Flatte" />
  <class name="FlexiFastAmplitudeIntegrator" />
  <class name="FromFileGenerator" />
  <class name="GounarisSakurai" />
  <class name="Histo_BW" />
  <class name="IntegCalculator" />
  <class name="Lass" />
  <class name="LorentzMatrix" />
  <class name="MINT::BasicComplex" />
  <class name="MINT::ComplexProduct" />
  <class name="MINT::ComplexProductForEvent<IDalitzEvent>" />
  <class name="MINT::EventList<DalitzEvent>" />
  <class name="MINT::FitComplex" />
  <class name="MINT::FitComplexCart" />
  <class name="MINT::FitComplexPolar" />
  <class name="MINT::FitParDependent" />
  <class name="MINT::FitParRef" />
  <class name="MINT::FitParameter" />
  <class name="MINT::GaussFct" />
  <class name="MINT::IEvtGen" />
  <class name="MINT::LASSO" />
  <class name="MINT::Minimisable" />
  <class name="MINT::MintFcn" />
  <class name="MINT::MintFcnGrad" />
  <class name="MINT::NamedParameter<double>" />
  <class name="MINT::NamedParameter<int>" />
  <class name="MINT::NamedParameter<long>" />
  <class name="MINT::NamedParameterStream" />
  <class name="MINT::Neg2LLConstraint" />
  <class name="MINT::Neg2LLSum" />
  <class name="MINT::ParsedParameterFile" />
  <class name="MINT::ParsedParameterLine" />
  <class name="MINT::Phase" />
  <class name="MINT::PolymorphVector<Chi2Box>" />
  <class name="MINT::PolymorphVector<DalitzArea>" />
  <class name="MINT::PolymorphVector<DalitzBWBox>" />
  <class name="MINT::PolymorphVector<DalitzBox>" />
  <class name="MINT::PolymorphVector<DalitzEvent>" />
  <class name="MINT::PolymorphVector<DecayTreeItem>" />
  <class name="MINT::PolymorphVector<FitAmpPair>" />
  <class name="MINT::PolymorphVector<FitFraction>" />
  <class name="MINT::PolymorphVector<MINT::FitParRef>" />
  <class name="MINT::PolymorphVector<Permutation>" />
  <class name="MINT::PolymorphVector<QuarkContent>" />
  <class name="MINT::PolymorphVector<TObject*>" />
  <class name="MINT::PolymorphVector<double>" />
  <class name="MINT::PolymorphVector<int>" />
  <class name="MINT::PolymorphVector<symPolyTerm>" />
  <class name="MINT::minimisePareto" />
  <class name="MakePreIntegratedAmplitudes" />
  <class name="MappedDalitzArea" />
  <class name="MappedDalitzBWArea" />
  <class name="Model_independent" />
  <class name="MultiQuarkContent" />
  <class name="MultiTopHat" />
  <class name="NamedDecayTreeList" />
  <class name="NonRes" />
  <class name="ParticleProperties" />
  <class name="ParticlePropertiesList" />
  <class name="Permutator" />
  <class name="PhaseSpaceIntegral3body" />
  <class name="PhaseSpaceIntegral4body" />
  <class name="PhaseSpaceIntegral4bodyWith_s123s12" />
  <class name="PhaseSpaceIntegral4bodyWith_s12s34" />
  <class name="PlotSet" />
  <class name="QuarkContent" />
  <class name="ResonanceProperties" />
  <class name="ResonancePropertiesFitRef" />
  <class name="ResonancePropertiesList" />
  <class name="ReturnPhaseSpace" />
  <class name="ReturnWeight" />
  <class name="Rho0Omega" />
  <class name="RhoOmegaGS" />
  <class name="RunningWidthCalculator" />
  <class name="SBW" />
  <class name="SF_AtoSP1_StoP2P3" />
  <class name="SF_AtoVP1_VtoP2P3" />
  <class name="SF_AtoVP1_VtoP2P3_BASE" />
  <class name="SF_AtoVP1_VtoP2P3_D" />
  <class name="SF_BtoAP1_AtoVV0_VtoP2P3" />
  <class name="SF_BtoAS_AtoP1V0_StoP2P3" />
  <class name="SF_BtoAV0_AtoSP1_StoP2P3" />
  <class name="SF_BtoAV0_AtoSP1_StoP2P3_BASE" />
  <class name="SF_BtoAV0_AtoSP1_StoP2P3_D" />
  <class name="SF_BtoAV0_AtoSP1_StoP2P3_P" />
  <class name="SF_BtoAV0_AtoVP1Dwave_VtoP2P3" />
  <class name="SF_BtoAV0_AtoVP1Dwave_VtoP2P3_D" />
  <class name="SF_BtoAV0_AtoVP1Dwave_VtoP2P3_P" />
  <class name="SF_BtoAV0_AtoVP1_VtoP2P3" />
  <class name="SF_BtoAV0_AtoVP1_VtoP2P3_BASE" />
  <class name="SF_BtoAV0_AtoVP1_VtoP2P3_D" />
  <class name="SF_BtoAV0_AtoVP1_VtoP2P3_P" />
  <class name="SF_BtoAV_AtoP1V0_VtoP2P3" />
  <class name="SF_BtoAV_AtoP1V0_VtoP2P3_BASE" />
  <class name="SF_BtoAV_AtoP1V0_VtoP2P3_D" />
  <class name="SF_BtoAV_AtoP1V0_VtoP2P3_P" />
  <class name="SF_BtoPP1_PtoVV0_VtoP2P3" />
  <class name="SF_BtoPS_PtoP1V0_StoP2P3" />
  <class name="SF_BtoPV0_PtoP1V1_V1toP2P3" />
  <class name="SF_BtoPV0_PtoS_StoP2P3" />
  <class name="SF_BtoPV_PtoP1V0_VtoP2P3" />
  <class name="SF_BtoPseudoTV0_PseudoTtoSP1_StoP2P3_P" />
  <class name="SF_BtoPseudoTV0_PseudoTtoTP1_TtoP2P3_P" />
  <class name="SF_BtoPseudoTV0_PseudoTtoVP1_VtoP2P3_D" />
  <class name="SF_BtoPseudoTV0_PseudoTtoVP1_VtoP2P3_P" />
  <class name="SF_BtoSP1_StoVV0_VtoP2P3" />
  <class name="SF_BtoTV0_TtoVP1_VtoP2P3_P" />
  <class name="SF_BtoV1P1_V1toV2V0_V2toP2P3" />
  <class name="SF_BtoV1V0_V1toV2P1_V2toP2P3" />
  <class name="SF_BtoV1V0_V1toV2P1_V2toP2P3_BASE" />
  <class name="SF_BtoV1V0_V1toV2P1_V2toP2P3_D" />
  <class name="SF_BtoV1V0_V1toV2P1_V2toP2P3_P" />
  <class name="SF_BtoV1V2_V1toP1V0_V2toP2P3" />
  <class name="SF_BtoVP1_VtoAP2_AtoV0P3" />
  <class name="SF_BtoVP1_VtoSV0_StoP2P3" />
  <class name="SF_BtoVP1_VtoTV0_TtoP2P3" />
  <class name="SF_BtoVP1_VtoV0S_StoP2P3" />
  <class name="SF_DtoAP0_AtoSP1_StoP2P3" />
  <class name="SF_DtoAP0_AtoTP1_TtoP2P3" />
  <class name="SF_DtoAP0_AtoVP1Dwave_VtoP2P3" />
  <class name="SF_DtoAP0_AtoVP1_VtoP2P3" />
  <class name="SF_DtoAP0_AtoVP1_VtoP2P3_BASE" />
  <class name="SF_DtoPP0_PtoSP1_StoP3P4" />
  <class name="SF_DtoPP0_PtoVP1_VtoP2P3" />
  <class name="SF_DtoPP1P2_PtoP3P4" />
  <class name="SF_DtoPseudoTP0_PseudoTtoSP1_StoP2P3" />
  <class name="SF_DtoPseudoTP0_PseudoTtoTP1_TtoP2P3" />
  <class name="SF_DtoPseudoTP0_PseudoTtoVP1_VtoP2P3" />
  <class name="SF_DtoS1S2_S1toP1P2_S2toP3P4" />
  <class name="SF_DtoT1P0_T1toT2P1_T2toP2P3" />
  <class name="SF_DtoT1T2_T1toP0P1_T2toP2P3_BASE" />
  <class name="SF_DtoT1T2_T1toP0P1_T2toP2P3_D" />
  <class name="SF_DtoT1T2_T1toP0P1_T2toP2P3_P" />
  <class name="SF_DtoT1T2_T1toP0P1_T2toP2P3_S" />
  <class name="SF_DtoTP0_TtoVP1_VtoP2P3" />
  <class name="SF_DtoTS_TtoP0P1_StoP2P3" />
  <class name="SF_DtoV1P0_V1toV2P1_V2toP2P3" />
  <class name="SF_DtoV1V2_V1toP0P1_V1toP2P3_BASE" />
  <class name="SF_DtoV1V2_V1toP0P1_V1toP2P3_D" />
  <class name="SF_DtoV1V2_V1toP0P1_V1toP2P3_P" />
  <class name="SF_DtoV1V2_V1toP0P1_V1toP2P3_S" />
  <class name="SF_DtoV1V2_V1toP0P1_V1toP2P3_S_nonResV1" />
  <class name="SF_DtoVS_VtoP0P1_StoP2P3" />
  <class name="SF_DtoVS_VtoP0P1_StoP2P3_nonResV" />
  <class name="SF_DtoVT_VtoP0P1_TtoP2P3_BASE" />
  <class name="SF_DtoVT_VtoP0P1_TtoP2P3_D" />
  <class name="SF_DtoVT_VtoP0P1_TtoP2P3_P" />
  <class name="SF_VtoAP1_AtoV0P2" />
  <class name="SF_VtoSV0_StoP2P3" />
  <class name="SF_VtoV0P1_V0toP2P3" />
  <class name="SignalGenerator" />
  <class name="SpinFactor" />
  <class name="SpinFactor3" />
  <class name="SpinFactorTrivial" />
  <class name="SumOfFitAmpLists" />
  <class name="SymmLorentzMatrix" />
  <class name="TGenPhaseSpaceWithRnd" />
  <class name="TLorentzVectorC" />
  <class name="TimeDependentGenerator::GenTimePoint" />
  <class name="ZTspin1" />
  <class name="ZTspin2" />
  <class name="chi2BF" />
  <class name="polVector" />
  <class name="singleTopHatShape" />
  <class name="symMultiPolyTerm" />
  <class name="symPolyTerm" />
  <function name="AllPossibleSij::nextLevel" />
  <function name="AllPossibleSij::print" />
  <function name="AmpInitPairLessThan::operator" />
  <function name="BW_resonance" />
  <function name="Bl_2" />
  <function name="EqualEvent" />
  <function name="Fermi_phaseSpace" />
  <function name="Gamma_2body" />
  <function name="Gamma_mother_3body" />
  <function name="Gamma_mother_3body_byM12" />
  <function name="IFastAmplitudeIntegrable::Gradient" />
  <function name="IFastAmplitudeIntegrable::useAnalyticGradient" />
  <function name="IGenFct::coordTransformFromS" />
  <function name="IGenFct::coordTransformToS" />
  <function name="IGenFct::getRhoMa" />
  <function name="IGenFct::getRhoMi" />
  <function name="LeviCivita" />
  <function name="LineshapeMaker" />
  <function name="MINT::A_is_in_B" />
  <function name="MINT::EventPtrList<DalitzEvent>::Add" />
  <function name="MINT::EventPtrList<DalitzEvent>::getEvent" />
  <function name="MINT::EventPtrList<DalitzEvent>::getEventRef" />
  <function name="MINT::EventPtrList<DalitzEvent>::getPtr" />
  <function name="MINT::EventPtrList<DalitzEvent>::popLastEventPtr" />
  <function name="MINT::FitComplexMaker" />
  <function name="MINT::IMinimisable::Gradient" />
  <function name="MINT::IMinimisable::setUseAnalyticGradient" />
  <function name="MINT::IMinimisable::useAnalyticGradient" />
  <function name="MINT::IPdf<IDalitzEvent>::Gradient" />
  <function name="MINT::IPdf<IDalitzEvent>::useAnalyticGradient" />
  <function name="MINT::IUnweightedEventGenerator<IDalitzEvent>::am_I_generating_what_I_think_I_am_generating" />
  <function name="MINT::IUnweightedEventGenerator<IDalitzEvent>::compareGenerationMethodsForFullPDF" />
  <function name="MINT::LeviCita" />
  <function name="MINT::PdfBase<IDalitzEvent>::RealVal" />
  <function name="MINT::PdfBase<IDalitzEvent>::beginFit" />
  <function name="MINT::PdfBase<IDalitzEvent>::endFit" />
  <function name="MINT::PdfBase<IDalitzEvent>::getNewVal" />
  <function name="MINT::PdfBase<IDalitzEvent>::parametersChanged" />
  <function name="MINT::SumPdf<IDalitzEvent>::Gradient" />
  <function name="MINT::SumPdf<IDalitzEvent>::beginFit" />
  <function name="MINT::SumPdf<IDalitzEvent>::endFit" />
  <function name="MINT::SumPdf<IDalitzEvent>::getVal" />
  <function name="MINT::SumPdf<IDalitzEvent>::parametersChanged" />
  <function name="MINT::SumPdf<IDalitzEvent>::useAnalyticGradient" />
  <function name="MINT::counted_ptr<CoherenceFactorStoreAndEvaluate>::release" />
  <function name="MINT::counted_ptr<DalitzEvent>::operator=" />
  <function name="MINT::counted_ptr<DalitzEvent>::release" />
  <function name="MINT::counted_ptr<FitAmpListBase>::release" />
  <function name="MINT::counted_ptr<FitAmpPairFitCovariance>::release" />
  <function name="MINT::counted_ptr<FitAmpPairList>::release" />
  <function name="MINT::counted_ptr<FitAmpSum>::release" />
  <function name="MINT::counted_ptr<IDalitzEvent>::release" />
  <function name="MINT::counted_ptr<IFastAmplitudeIntegrable>::release" />
  <function name="MINT::counted_ptr<IGenFct>::release" />
  <function name="MINT::counted_ptr<IIntegrationCalculator>::release" />
  <function name="MINT::counted_ptr<IntegCalculator>::release" />
  <function name="MINT::counted_ptr<MINT::FitComplex>::release" />
  <function name="MINT::counted_ptr<MINT::FitParameter>::release" />
  <function name="MINT::counted_ptr<MINT::IReturnComplex>::release" />
  <function name="MINT::counted_ptr<TH1>::release" />
  <function name="MINT::counted_ptr<TH1D>::release" />
  <function name="MINT::counted_ptr<TH2F>::release" />
  <function name="MINT::counted_ptr<TRandom>::release" />
  <function name="MINT::generalisedPareto_cumulative" />
  <function name="MINT::generalisedPareto_estimateMaximum" />
  <function name="MINT::generalisedPareto_limit" />
  <function name="MINT::generalisedPareto_logPdf" />
  <function name="MINT::generalisedPareto_pdf" />
  <function name="MINT::generalisedPareto_sigmaFromMeanRMS" />
  <function name="MINT::generalisedPareto_xiFromMeanRMS" />
  <function name="MINT::generalisedPareto_yFromCL" />
  <function name="Permutation::getInverse" />
  <function name="Permutation::isUnity" />
  <function name="Permutation::makeUnity" />
  <function name="Permutation::nPermutations" />
  <function name="Permutation::operator*" />
  <function name="Permutation::operator/" />
  <function name="Permutation::operator<=" />
  <function name="Permutation::operator>" />
  <function name="Permutation::operator>=" />
  <function name="Permutation::print" />
  <function name="Permutation::reset" />
  <function name="Permutation::set" />
  <function name="Permutation::setSign" />
  <function name="Permutation::swap" />
  <function name="Permutation::unity" />
  <function name="PrintAllSpinFactors" />
  <function name="Q" />
  <function name="SF_AtoSP1_StoP2P3_BASE::parseTree" />
  <function name="SF_BtoAP1_AtoVV0_VtoP2P3_BASE::parseTree" />
  <function name="SF_BtoAS_AtoP1V0_StoP2P3_BASE::parseTree" />
  <function name="SF_BtoPP1_PtoVV0_VtoP2P3_BASE::parseTree" />
  <function name="SF_BtoPS_PtoP1V0_StoP2P3_BASE::parseTree" />
  <function name="SF_BtoPV0_PtoP1V1_V1toP2P3_BASE::parseTree" />
  <function name="SF_BtoPV0_PtoS_StoP2P3_BASE::parseTree" />
  <function name="SF_BtoPV_PtoP1V0_VtoP2P3_BASE::parseTree" />
  <function name="SF_BtoPseudoTV0_PseudoTtoSP1_StoP2P3_BASE::parseTree" />
  <function name="SF_BtoPseudoTV0_PseudoTtoTP1_TtoP2P3_BASE::parseTree" />
  <function name="SF_BtoPseudoTV0_PseudoTtoVP1_VtoP2P3_BASE::parseTree" />
  <function name="SF_BtoSP1_StoVV0_VtoP2P3_BASE::parseTree" />
  <function name="SF_BtoTV0_TtoVP1_VtoP2P3_BASE::parseTree" />
  <function name="SF_BtoV1P1_V1toV2V0_V2toP2P3_BASE::parseTree" />
  <function name="SF_BtoV1V2_V1toP1V0_V2toP2P3_BASE::parseTree" />
  <function name="SF_BtoVP1_VtoAP2_AtoV0P3_BASE::parseTree" />
  <function name="SF_BtoVP1_VtoSV0_StoP2P3_BASE::parseTree" />
  <function name="SF_BtoVP1_VtoTV0_TtoP2P3_BASE::parseTree" />
  <function name="SF_BtoVP1_VtoV0S_StoP2P3_BASE::parseTree" />
  <function name="SF_VtoAP1_AtoV0P2_BASE::parseTree" />
  <function name="SF_VtoSV0_StoP2P3_BASE::parseTree" />
  <function name="SF_VtoV0P1_V0toP2P3_BASE::parseTree" />
  <function name="SpinFactorMaker" />
  <function name="SpinFactorMaker3Body" />
  <function name="SpinFactorMaker4Body" />
  <function name="SpinSumT::Sandwich" />
  <function name="SpinSumV::Dot" />
  <function name="SpinSumV::Sandwich" />
  <function name="anti" />
  <function name="d3body_by_ds12" />
  <function name="d4body_by_ds12" />
  <function name="d_ps4_by_ds123ds12_withFct" />
  <function name="d_ps4_by_ds12ds34_withFct" />
  <function name="equalBySVPAT" />
  <function name="equalBySVPATRec" />
  <function name="equalBySVPAT_L" />
  <function name="equalBySVPAT_LRec" />
  <function name="exists" />
  <function name="lessByAmpPairIntegral::operator" />
  <function name="lessByAmpPairIntegral_ptr::operator" />
  <function name="lessByAmpPairIntegral_ptr_int_pair::operator" />
  <function name="lessByChi2BoxData::operator" />
  <function name="lessByChi2BoxSetChi2::operator" />
  <function name="lessByFitAmpPairIntegral::operator" />
  <function name="lessByFitAmpPairIntegral_ptr::operator" />
  <function name="lessByFitAmpPairIntegral_ptr_int_pair::operator" />
  <function name="lessBySVPAT::operator" />
  <function name="lessBySVPAT_L::operator" />
  <function name="moreByAbsID_stillUnique::operator" />
  <function name="moreByID::operator" />
  <function name="moreByL::operator" />
  <function name="moreByMass::operator" />
  <function name="moreByNDgtr::operator" />
  <function name="netQuarkContent" />
  <function name="phaseSpace" />
  <function name="phaseSpaceIntegral" />
  <function name="phaseSpaceIntegral2body" />
  <function name="sortByMoreAbsID_stillUnique" />
  <function name="sortByMoreDgtr" />
  <function name="sortByMoreID" />
  <function name="sortByMoreL" />
  <function name="sortByMoreMass" />
  <function name="sortBySVPAT" />
  <function name="sortBySVPAT_L" />
  <function name="standardSort" />
  -->
</lcgdict>
